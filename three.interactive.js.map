{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Raycaster, Vector2 } from 'three';\r\n\r\nexport class InteractiveObject {\r\n  target: THREE.Object3D;\r\n  name: string;\r\n  intersected: boolean;\r\n  wasIntersected: boolean = false;\r\n  distance: number;\r\n  constructor(target: THREE.Object3D, name: string) {\r\n    this.target = target;\r\n    this.name = name;\r\n    this.intersected = false;\r\n    this.distance = 0;\r\n  }\r\n}\r\n\r\nexport class InteractiveEvent {\r\n  type: string;\r\n  cancelBubble: boolean;\r\n  originalEvent: Event | null;\r\n\r\n  // Dummy default values\r\n  coords: Vector2 = new Vector2(0, 0);\r\n  distance: number = 0;\r\n  intersected: boolean = false;\r\n\r\n  constructor(type: string, originalEvent: Event | null = null) {\r\n    this.cancelBubble = false;\r\n    this.type = type;\r\n    this.originalEvent = originalEvent;\r\n  }\r\n  stopPropagation() {\r\n    this.cancelBubble = true;\r\n  }\r\n}\r\n\r\nexport class InteractionManager {\r\n  renderer: THREE.Renderer;\r\n  camera: THREE.Camera;\r\n  domElement: HTMLElement;\r\n  bindEventsOnBodyElement: boolean;\r\n  mouse: Vector2;\r\n  supportsPointerEvents: boolean;\r\n  interactiveObjects: InteractiveObject[];\r\n  closestObject: InteractiveObject | null;\r\n  raycaster: THREE.Raycaster;\r\n\r\n  treatTouchEventsAsMouseEvents: boolean;\r\n\r\n  constructor(\r\n    renderer: THREE.Renderer,\r\n    camera: THREE.Camera,\r\n    domElement: HTMLElement,\r\n    dontBindEventsOnBody?: boolean | undefined\r\n  ) {\r\n    this.renderer = renderer;\r\n    this.camera = camera;\r\n    this.domElement = domElement;\r\n    this.bindEventsOnBodyElement = true;\r\n    if (typeof dontBindEventsOnBody !== 'undefined' && dontBindEventsOnBody) {\r\n      this.bindEventsOnBodyElement = false;\r\n    }\r\n\r\n    this.mouse = new Vector2(-1, 1); // top left default position\r\n\r\n    this.supportsPointerEvents = !!window.PointerEvent;\r\n\r\n    this.interactiveObjects = [];\r\n    this.closestObject = null;\r\n\r\n    this.raycaster = new Raycaster();\r\n\r\n    domElement.addEventListener('click', this.onMouseClick);\r\n\r\n    if (this.supportsPointerEvents) {\r\n      if (this.bindEventsOnBodyElement) {\r\n        domElement.ownerDocument.addEventListener(\r\n          'pointermove',\r\n          this.onDocumentPointerMove\r\n        );\r\n      } else {\r\n        domElement.addEventListener('pointermove', this.onDocumentPointerMove);\r\n      }\r\n      domElement.addEventListener('pointerdown', this.onPointerDown);\r\n      domElement.addEventListener('pointerup', this.onPointerUp);\r\n    }\r\n\r\n    if (this.bindEventsOnBodyElement) {\r\n      domElement.ownerDocument.addEventListener(\r\n        'mousemove',\r\n        this.onDocumentMouseMove\r\n      );\r\n    } else {\r\n      domElement.addEventListener('mousemove', this.onDocumentMouseMove);\r\n    }\r\n    domElement.addEventListener('mousedown', this.onMouseDown);\r\n    domElement.addEventListener('mouseup', this.onMouseUp);\r\n    domElement.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: true,\r\n    });\r\n    domElement.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: true,\r\n    });\r\n    domElement.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: true,\r\n    });\r\n\r\n    this.treatTouchEventsAsMouseEvents = true;\r\n  }\r\n\r\n  dispose = () => {\r\n    this.domElement.removeEventListener('click', this.onMouseClick);\r\n\r\n    if (this.supportsPointerEvents) {\r\n      if (this.bindEventsOnBodyElement) {\r\n        this.domElement.ownerDocument.removeEventListener(\r\n          'pointermove',\r\n          this.onDocumentPointerMove\r\n        );\r\n      } else {\r\n        this.domElement.removeEventListener(\r\n          'pointermove',\r\n          this.onDocumentPointerMove\r\n        );\r\n      }\r\n      this.domElement.removeEventListener('pointerdown', this.onPointerDown);\r\n      this.domElement.removeEventListener('pointerup', this.onPointerUp);\r\n    }\r\n\r\n    if (this.bindEventsOnBodyElement) {\r\n      this.domElement.ownerDocument.removeEventListener(\r\n        'mousemove',\r\n        this.onDocumentMouseMove\r\n      );\r\n    } else {\r\n      this.domElement.removeEventListener(\r\n        'mousemove',\r\n        this.onDocumentMouseMove\r\n      );\r\n    }\r\n    this.domElement.removeEventListener('mousedown', this.onMouseDown);\r\n    this.domElement.removeEventListener('mouseup', this.onMouseUp);\r\n    this.domElement.removeEventListener('touchstart', this.onTouchStart);\r\n    this.domElement.removeEventListener('touchmove', this.onTouchMove);\r\n    this.domElement.removeEventListener('touchend', this.onTouchEnd);\r\n  };\r\n\r\n  add = (object: THREE.Object3D, childNames: string[] = []) => {\r\n    if (object) {\r\n      if (childNames.length > 0) {\r\n        childNames.forEach((name) => {\r\n          const o = object.getObjectByName(name);\r\n          if (o) {\r\n            const interactiveObject = new InteractiveObject(o, name);\r\n            this.interactiveObjects.push(interactiveObject);\r\n          }\r\n        });\r\n      } else {\r\n        const interactiveObject = new InteractiveObject(object, object.name);\r\n        this.interactiveObjects.push(interactiveObject);\r\n      }\r\n    }\r\n  };\r\n\r\n  remove = (object: THREE.Object3D, childNames: string[] = []) => {\r\n    if (!object) return;\r\n    const filterSet = new Set<string>(\r\n      childNames.length > 0 ? childNames : [object.name]\r\n    );\r\n\r\n    this.interactiveObjects = this.interactiveObjects.filter(\r\n      (o) => !filterSet.has(o.name)\r\n    );\r\n  };\r\n\r\n  update = () => {\r\n    this.raycaster.setFromCamera(this.mouse, this.camera);\r\n\r\n    // console.log( scene.children );\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      if (object.target) this.checkIntersection(object);\r\n    });\r\n\r\n    this.interactiveObjects.sort(function (a, b) {\r\n      return a.distance - b.distance;\r\n    });\r\n\r\n    const newClosestObject =\r\n      this.interactiveObjects.find((object) => object.intersected) ?? null;\r\n    if (newClosestObject != this.closestObject) {\r\n      if (this.closestObject) {\r\n        const eventOutClosest = new InteractiveEvent('mouseout');\r\n        this.dispatch(this.closestObject, eventOutClosest);\r\n      }\r\n      if (newClosestObject) {\r\n        const eventOverClosest = new InteractiveEvent('mouseover');\r\n        this.dispatch(newClosestObject, eventOverClosest);\r\n      }\r\n      this.closestObject = newClosestObject;\r\n    }\r\n\r\n    let eventLeave: InteractiveEvent;\r\n    this.interactiveObjects.forEach((object) => {\r\n      if (!object.intersected && object.wasIntersected) {\r\n        if (!eventLeave) {\r\n          eventLeave = new InteractiveEvent('mouseleave');\r\n        }\r\n        this.dispatch(object, eventLeave);\r\n      }\r\n    });\r\n    let eventEnter: InteractiveEvent;\r\n    this.interactiveObjects.forEach((object) => {\r\n      if (object.intersected && !object.wasIntersected) {\r\n        if (!eventEnter) {\r\n          eventEnter = new InteractiveEvent('mouseenter');\r\n        }\r\n        this.dispatch(object, eventEnter);\r\n      }\r\n    });\r\n  };\r\n\r\n  checkIntersection = (object: InteractiveObject) => {\r\n    const intersects = this.raycaster.intersectObjects([object.target], true);\r\n\r\n    object.wasIntersected = object.intersected;\r\n\r\n    if (intersects.length > 0) {\r\n      let distance = intersects[0].distance;\r\n      intersects.forEach((i) => {\r\n        if (i.distance < distance) {\r\n          distance = i.distance;\r\n        }\r\n      });\r\n      object.intersected = true;\r\n      object.distance = distance;\r\n    } else {\r\n      object.intersected = false;\r\n    }\r\n  };\r\n\r\n  onDocumentMouseMove = (mouseEvent: MouseEvent) => {\r\n    // event.preventDefault();\r\n\r\n    this.mapPositionToPoint(this.mouse, mouseEvent.clientX, mouseEvent.clientY);\r\n\r\n    const event = new InteractiveEvent('mousemove', mouseEvent);\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      this.dispatch(object, event);\r\n    });\r\n  };\r\n\r\n  onDocumentPointerMove = (pointerEvent: PointerEvent) => {\r\n    // event.preventDefault();\r\n\r\n    this.mapPositionToPoint(\r\n      this.mouse,\r\n      pointerEvent.clientX,\r\n      pointerEvent.clientY\r\n    );\r\n\r\n    const event = new InteractiveEvent('pointermove', pointerEvent);\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      this.dispatch(object, event);\r\n    });\r\n  };\r\n\r\n  onTouchMove = (touchEvent: TouchEvent) => {\r\n    // event.preventDefault();\r\n\r\n    if (touchEvent.touches.length > 0) {\r\n      this.mapPositionToPoint(\r\n        this.mouse,\r\n        touchEvent.touches[0].clientX,\r\n        touchEvent.touches[0].clientY\r\n      );\r\n    }\r\n\r\n    const event = new InteractiveEvent(\r\n      this.treatTouchEventsAsMouseEvents ? 'mousemove' : 'touchmove',\r\n      touchEvent\r\n    );\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      this.dispatch(object, event);\r\n    });\r\n  };\r\n\r\n  onMouseClick = (mouseEvent: MouseEvent) => {\r\n    this.update();\r\n\r\n    const event = new InteractiveEvent('click', mouseEvent);\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      if (object.intersected) {\r\n        this.dispatch(object, event);\r\n      }\r\n    });\r\n  };\r\n\r\n  onMouseDown = (mouseEvent: MouseEvent) => {\r\n    this.mapPositionToPoint(this.mouse, mouseEvent.clientX, mouseEvent.clientY);\r\n\r\n    this.update();\r\n\r\n    const event = new InteractiveEvent('mousedown', mouseEvent);\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      if (object.intersected) {\r\n        this.dispatch(object, event);\r\n      }\r\n    });\r\n  };\r\n\r\n  onPointerDown = (pointerEvent: PointerEvent) => {\r\n    this.mapPositionToPoint(\r\n      this.mouse,\r\n      pointerEvent.clientX,\r\n      pointerEvent.clientY\r\n    );\r\n\r\n    this.update();\r\n\r\n    const event = new InteractiveEvent('pointerdown', pointerEvent);\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      if (object.intersected) {\r\n        this.dispatch(object, event);\r\n      }\r\n    });\r\n  };\r\n\r\n  onTouchStart = (touchEvent: TouchEvent) => {\r\n    if (touchEvent.touches.length > 0) {\r\n      this.mapPositionToPoint(\r\n        this.mouse,\r\n        touchEvent.touches[0].clientX,\r\n        touchEvent.touches[0].clientY\r\n      );\r\n    }\r\n\r\n    this.update();\r\n\r\n    const event = new InteractiveEvent(\r\n      this.treatTouchEventsAsMouseEvents ? 'mousedown' : 'touchstart',\r\n      touchEvent\r\n    );\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      if (object.intersected) {\r\n        this.dispatch(object, event);\r\n      }\r\n    });\r\n  };\r\n\r\n  onMouseUp = (mouseEvent: MouseEvent) => {\r\n    const event = new InteractiveEvent('mouseup', mouseEvent);\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      this.dispatch(object, event);\r\n    });\r\n  };\r\n\r\n  onPointerUp = (pointerEvent: PointerEvent) => {\r\n    const event = new InteractiveEvent('pointerup', pointerEvent);\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      this.dispatch(object, event);\r\n    });\r\n  };\r\n\r\n  onTouchEnd = (touchEvent: TouchEvent) => {\r\n    if (touchEvent.touches.length > 0) {\r\n      this.mapPositionToPoint(\r\n        this.mouse,\r\n        touchEvent.touches[0].clientX,\r\n        touchEvent.touches[0].clientY\r\n      );\r\n    }\r\n\r\n    this.update();\r\n\r\n    const event = new InteractiveEvent(\r\n      this.treatTouchEventsAsMouseEvents ? 'mouseup' : 'touchend',\r\n      touchEvent\r\n    );\r\n\r\n    this.interactiveObjects.forEach((object) => {\r\n      this.dispatch(object, event);\r\n    });\r\n  };\r\n\r\n  dispatch = (object: InteractiveObject, event: InteractiveEvent) => {\r\n    if (object.target && !event.cancelBubble) {\r\n      event.coords = this.mouse;\r\n      event.distance = object.distance;\r\n      event.intersected = object.intersected;\r\n      object.target.dispatchEvent(event);\r\n    }\r\n  };\r\n\r\n  mapPositionToPoint = (point: Vector2, x: number, y: number) => {\r\n    const rect = this.renderer.domElement.getBoundingClientRect();\r\n\r\n    point.x = ((x - rect.left) / rect.width) * 2 - 1;\r\n    point.y = -((y - rect.top) / rect.height) * 2 + 1;\r\n  };\r\n}\r\n"],
  "mappings": "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",
  "names": ["Raycaster", "Vector2", "InteractiveObject", "target", "name", "InteractiveEvent", "type", "originalEvent", "InteractionManager", "renderer", "camera", "domElement", "dontBindEventsOnBody", "object", "childNames", "o", "interactiveObject", "filterSet", "a", "b", "newClosestObject", "eventOutClosest", "eventOverClosest", "eventLeave", "eventEnter", "intersects", "distance", "i", "mouseEvent", "event", "pointerEvent", "touchEvent", "point", "x", "y", "rect"]
}
